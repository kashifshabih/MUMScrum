@model edu.mum.mumscrum.Models.UserStory

@{
    ViewBag.Title = "Estimate Effort";
    Layout = "~/Views/Shared/_TesterLayoutPage.cshtml";
}

<h2>Estimate Effort</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User Story</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DeveloperID)
        @Html.HiddenFor(model => model.TesterID)

        @Html.HiddenFor(model => model.ProductBacklogID, new { htmlAttributes = new { @class = "form-control" } })

        <div class="form-group">
            @Html.Label("User Story Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { disabled = "disabled", @class = "form-control" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })

        <div class="form-group">
            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { disabled = "disabled", @class = "form-control" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })

        <div class="form-group">
            @Html.Label("Sprint Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Sprint.Name, new { disabled = "disabled", @class = "form-control" })
            </div>
        </div>

        @Html.HiddenFor(model => model.SprintID, htmlAttributes: new { @class = "form-control" })

        @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.ExpectedEndDate, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.ActualEndDate, new { htmlAttributes = new { @class = "form-control" } })

        <div class="form-group">
                @Html.LabelFor(model => model.TestStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.TestStatus, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TestStatus, "", new { @class = "text-danger" })
                </div>
            </div>

        @Html.HiddenFor(model => model.ReleaseBacklogID, htmlAttributes: new { @class = "form-control" })

        <div class="form-group">
            @Html.LabelFor(model => model.TesterEstimateInHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TesterEstimateInHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TesterEstimateInHours, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@Html.HiddenFor(model => model.TesterEstimateInHours, new { htmlAttributes = new { @class = "form-control" } })*@

        @Html.HiddenFor(model => model.DeveloperEstimateInHours, new { htmlAttributes = new { @class = "form-control" } })

        @*@Html.HiddenFor(model => model.TesterHoursCompleted, new { htmlAttributes = new { @class = "form-control" } })*@

        <div class="form-group">
            @Html.LabelFor(model => model.TesterHoursCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TesterHoursCompleted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TesterHoursCompleted, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.DeveloperHoursCompleted, new { htmlAttributes = new { @class = "form-control" } })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "UserStories")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
